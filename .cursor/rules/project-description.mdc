---
description: 
globs: 
alwaysApply: true
---
{
  "$schema": "https://raw.githubusercontent.com/cursor-ch/cursor-rules/main/schema.json",
  "name": "Webstore Backend",
  "description": "A modular Spring Boot + Vue e-commerce backend application using JWT-based authentication and MyBatis for database operations.",
  "language": "Java",
  "framework": "Spring Boot",
  "orm": "MyBatis-Plus",
  "auth": {
    "type": "JWT",
    "security": "Spring Security configured with CustomUserDetailsService",
    "roles": ["CUSTOMER", "SELLER", "ADMIN"],
    "loginModes": ["register_email", "register_phone"],
    "uniqueIdentity": ["account", "role"],
    "registrationRules": {
      "allowedRoles": ["CUSTOMER", "SELLER"],
      "adminRole": "ADMIN",
      "adminAccountCreation": "Admin accounts (ADMIN role) are created manually by the developer and stored in the backend database.",
      "uniqueAccountPerRole": "Each phone number or email can only be used to register once, but different roles can use the same phone number or email for registration."
    }
  },
  "structure": {
    "backend": {
      "type": "modular",
      "modules": [
        "user",
        "product",
        "order",
        "common",
        "cart",
        "receiverinfo"
      ],
      "patterns": {
        "controller": "Handles HTTP requests and interacts with service layer.",
        "service": "Business logic layer, interfaces + implementations.",
        "mapper": "MyBatis mapper interfaces for database operations.",
        "dto": "Data Transfer Objects for request/response abstraction.",
        "entity": "JPA/MyBatis entities representing database tables."
      }
    },
    "common": {
      "purpose": "Holds enums, filters, config, utils and other shared components across modules."
    }
  },
  "database": {
    "tables": [
      {
        "name": "user",
        "description": "Stores user authentication and identity data.",
        "columns": {
          "id": "Primary key",
          "username": "Unique username",
          "password": "BCrypt hashed password",
          "role": "User role: CUSTOMER, SELLER, or ADMIN",
          "register_phone": "Phone used for registration (nullable)",
          "register_email": "Email used for registration (nullable)",
          "register_time": "Timestamp of registration",
          "is_deleted": "Soft delete flag",
          "deleted_at": "Soft delete timestamp"
        }
      },
      {
        "name": "product",
        "description": "Stores product listing data posted by sellers.",
        "columns": {
          "id": "Primary key",
          "name": "Product name",
          "price": "Price (decimal)",
          "storage": "Stock quantity",
          "imgurl": "Image URL",
          "description": "Detailed product description",
          "category": "Product category (enum)",
          "seller_id": "Foreign key to user(id)",
          "create_time": "Creation timestamp",
          "update_time": "Last update timestamp",
          "is_deleted": "Soft delete flag"
        }
      },
      {
        "name": "cart",
        "description": "User shopping cart records.",
        "columns": {
          "id": "Primary key",
          "user_id": "Foreign key to user(id)",
          "product_id": "Foreign key to product(id)",
          "quantity": "Number of items",
          "selected": "Selection flag for checkout",
          "create_time": "Creation timestamp",
          "update_time": "Last update timestamp"
        }
      },
      {
        "name": "receiver_info",
        "description": "Stores user delivery addresses.",
        "columns": {
          "id": "Primary key",
          "user_id": "Foreign key to user(id)",
          "receiver_name": "Name of recipient",
          "receiver_phone": "Phone number of recipient",
          "province_code": "Province code",
          "province_name": "Province name",
          "city_code": "City code",
          "city_name": "City name",
          "district_code": "District code",
          "district_name": "District name",
          "detail": "Detailed address",
          "label": "Address label (e.g., home, office)",
          "is_default": "Whether it's default address",
          "is_deleted": "Soft delete flag",
          "create_time": "Creation timestamp",
          "update_time": "Update timestamp",
          "deleted_at": "Soft delete timestamp"
        }
      }
    ]
  },
  "conventions": {
    "softDelete": {
      "field": "is_deleted",
      "timestampField": "deleted_at"
    },
    "dateFields": ["create_time", "update_time", "register_time", "deleted_at"]
  },
  "features": {
    "user": {
      "registration": "New users can register via email or phone. Only 'CUSTOMER' and 'SELLER' roles are allowed during registration.",
      "login": "Registered users can log in with their credentials. All roles (CUSTOMER, SELLER, ADMIN) can log in.",
      "browseAndQuery": "Registered users can browse and query products.",
      "addToCart": "Users can add products to their cart.",
      "purchase": "Users can complete purchases and make payments.",
      "orderConfirmation": "After payment, users will receive a confirmation via email or SMS, based on the registration method.",
      "guestBrowsing": "Unregistered users can browse and search for products but cannot make purchases or add products to the cart."
    },
    "seller": {
      "catalogManagement": "Sellers can manage their product catalog, including adding/removing categories.",
      "productInfoModification": "Sellers can modify product information, including price and stock quantity.",
      "salesMonitoring": "Sellers can monitor the sales status of products.",
      "userPurchaseLog": "Sellers can view logs of user purchases of their products."
    },
    "admin": {
      "manageSellerIDs": "Admins can add and delete seller IDs.",
      "resetPassword": "Admins can reset login credentials for sellers.",
      "monitorSalesPerformance": "Admins can monitor the sales performance of sellers and their products.",
      "salesReports": "Admins can generate sales performance reports for each product category.",
      "inventoryManagement": "Admins can manage the stock of products and sales performance."
    },
    "bigData": {
      "userBehavior": {
        "loginLogoutTracking": "Track user login and logout time and IP address.",
        "productCategoryAccess": "Track the time users spend on each product category.",
        "purchaseRecords": "Track products purchased by users, including category, price, quantity, etc."
      },
      "sellerAndAdminBehavior": {
        "loginLogoutTracking": "Track login and logout time and IP address for sellers and admins.",
        "operationLogs": "Track all actions by sellers and admins, including queries, with timestamps, actions, IP addresses, and account information."
      },
      "recommendationSystem": {
        "userProfile": "Analyze and categorize users based on location, purchasing power, and preferred product categories.",
        "purchaseTrendPrediction": "Predict user purchasing trends based on historical data and provide product recommendations.",
        "salesTrendPrediction": "Predict product sales trends to support decision-making.",
        "salesAnomalyDetection": "Detect and monitor abnormal sales patterns in real-time."
      }
    }
  },
  "notes": [
    "All authentication relies on JWT tokens.",
    "Users can log in with either register_email or register_phone, but must provide the correct role.",
    "Soft deletion is implemented via is_deleted and deleted_at fields.",
    "The common module contains reusable components and should not depend on other business modules.",
    "Unregistered users can browse and search for products, but cannot make purchases or add products to the cart.",
    "Admin accounts are created manually by developers and are stored directly in the backend database.",
    "Each phone number or email can only be used to register once, but different roles (CUSTOMER, SELLER) can use the same phone number or email for registration.",
    "Do not apologize for errors : fix them."，
    "每次修改代码前回顾所有相关代码，保证代码一致性。"，
    "必须保证前端代码router与后端接口的一致性",
    "use Chinese."
    
  ]
}
